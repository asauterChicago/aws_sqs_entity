<?php

/**
 * @file
 * Hook implementations for Amazon SQS Entity module.
 */

define('AWS_SQS_ENTITY_QUEUE_CLASS_DEFAULT', '\Drupal\aws_sqs_entity\Entity\CrudQueue');

use \Drupal\aws_sqs_entity\Entity\CrudQueue;
use \Drupal\aws_sqs_entity\Normalizer\AbstractEntityValueWrapperNormalizer;

/**
 * Implements hook_menu().
 */
function aws_sqs_entity_menu() {
  $items['admin/config/system/aws-sqs-entity'] = array(
    'title' => 'AWS SQS Entity',
    'description' => 'Configure AWS SQS Entity Settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('aws_sqs_entity_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'aws_sqs_entity.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_entity_insert().
 */
function aws_sqs_entity_entity_insert($entity, $type) {
  aws_sqs_entity_crud($entity, $type, 'insert');
}

/**
 * Implements hook_entity_update().
 */
function aws_sqs_entity_entity_update($entity, $type) {
  aws_sqs_entity_crud($entity, $type, 'update');
}

/**
 * Implements hook_entity_delete().
 */
function aws_sqs_entity_entity_delete($entity, $type) {
  aws_sqs_entity_crud($entity, $type, 'delete');
}

/**
 * AWS SQS Entity CRUD action wrapper.
 *
 * @param object $entity
 *   The CRUD-triggered Entity.
 * @param string $type
 *   The CRUD-triggered Entity type.
 * @param string $op
 *   The CRUD operation from hook_entity_OPERATION().
 * @param bool $skip_rules
 *   Optionally skip CrudQueue::checkRules().
 *
 * @return bool Whether the entity published or not.
 */
function aws_sqs_entity_crud($entity, $type, $op, $skip_rules = FALSE) {
  if ($queue = CrudQueue::getQueue($type, $entity, $op)) {
    if (!$skip_rules && !$queue::checkRules($type, $entity, $op)) {
      return FALSE;
    }
    return $queue->sendItem();
  }
}

/**
 * Implements hook_aws_sqs_entity_value_wrapper_normalizers().
 */
function aws_sqs_entity_aws_sqs_entity_value_wrapper_normalizers() {
  return [
    new AbstractEntityValueWrapperNormalizer(),
  ];
}

/**
 * Implements hook_module_implements_alter().
 */
function aws_sqs_entity_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'aws_sqs_entity_value_wrapper_normalizers') {
    // Move aws_sqs_entity_aws_sqs_entity_value_wrapper_normalizers() to the end
    // of the list, so that other normalizers can fire first, and if no
    // supporting normalizer is found, we fall back to
    // AbstractEntityValueWrapperNormalizer(), which just delivers
    // EntityMetadataWrapper::value().
    $group = $implementations['aws_sqs_entity'];
    unset($implementations['aws_sqs_entity']);
    $implementations['aws_sqs_entity'] = $group;
  }
}
